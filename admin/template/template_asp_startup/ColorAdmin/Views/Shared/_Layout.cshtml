@using Microsoft.AspNetCore.Http

@{
	string appMode = "";
	if (Context.Request.Cookies.TryGetValue("app-theme-dark-mode", out string appModeValue))
	{
		appMode = (appModeValue == "dark-mode") ? "dark" : "";
	}
}
<!DOCTYPE html>
<html lang="en" data-bs-theme="@appMode" @ViewData["AppHtmlAttr"]>
<head>
	<meta charset="utf-8" />
	<title>Color Admin | @ViewData["Title"]</title>
	<meta name="viewport" content="width=device-width, initial-scale=1" />
	<meta name="description" content="@ViewData["MetaDescription"]" />
	<meta name="author" content="@ViewData["MetaAuthor"]" />
	<meta name="keywords" content="@ViewData["MetaKeywords"]" />

	@RenderSection("MetaTag", required: false)

	<!-- ================== BEGIN core-css ================== -->
	<link href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700" rel="stylesheet" />
	<link href="~/css/vendor.min.css" rel="stylesheet" />
	<link href="~/css/default/app.min.css" rel="stylesheet" />
	<!-- ================== END core-css ================== -->

	@RenderSection("Styles", required: false)
</head>
<body class="@ViewData["AppBodyClass"]">
	<!-- BEGIN #app -->
	<div id="app" class="app @(ViewData["AppSidebarNone"] == null ? "app-sidebar-fixed" : "") @(ViewData["AppHeaderNone"] == null ? "app-header-fixed" : "") @ViewData["AppClass"]">
		@if (ViewData["AppHeaderNone"] == null) {
			<partial name="_Header" />
		}
		
		@if (ViewData["AppTopMenu"] != null) {
			<partial name="_TopMenu" />
		}

		@if (ViewData["AppSidebarNone"] == null) {
			<partial name="_Sidebar" />
		}
		
		@if (ViewData["AppSidebarTwo"] != null) {
			<partial name="_SidebarRight" />
		}

		@if (ViewData["AppEmpty"] == null) {
			<div id="content" class="app-content @ViewData["AppContentClass"]" @ViewData["AppContentAttr"]>
				@RenderBody()
			</div>
		} else {
			@RenderBody()
		}
		
		
		<partial name="_ThemePanel" />

		@RenderSection("AppOutterContent", required: false)
	</div>
	<!-- END #app -->

	<!-- ================== BEGIN core-js ================== -->
	<script>
		window.paceOptions = { 
			ajax: { ignoreURLs: ['mainHub', '__browserLink', 'browserLinkSignalR'], trackWebSockets: false } 
		};
	</script>
	<script src="~/js/vendor.min.js"></script>
	<script src="~/js/app.min.js"></script>
	<!-- ================== END core-js ================== -->
	@RenderSection("Scripts", required: false)
</body>
</html>
